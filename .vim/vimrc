scriptencoding utf-8
" ^^ Please leave the above line at the start of the file.
" vim: set fenc=utf-8 tw=80 sw=2 sts=2 et foldmethod=marker :

" {{{ General settings
" The following are some sensible defaults for Vim for most users.
" We attempt to change as little as possible from Vim's defaults,
" deviating only where it makes sense
set nocompatible        " Use Vim defaults (much better!)
set bs=2                " Allow backspacing over everything in insert mode
set ai                  " Always set auto-indenting on
set history=500         " keep 50 lines of command history
set ruler               " Show the cursor position all the time
set incsearch
set laststatus=2
set tabpagemax=50

set hidden
set viminfo='20,\"500   " Keep a .viminfo file.

language messages C

" Don't use Ex mode, use Q for formatting
map Q gq

" When doing tab completion, give the following files lower priority. You may
" wish to set 'wildignore' to completely ignore files, and 'wildmenu' to enable
" enhanced tab completion. These can be done in the user vimrc file.
set suffixes+=.info,.aux,.log,.dvi,.bbl,.out,.o,.lo

" When displaying line numbers, don't use an annoyingly wide number column. This
" doesn't enable line numbers -- :set number will do that. The value given is a
" minimum width to use for the number column, not a fixed size.
if v:version >= 700
  set numberwidth=3
endif

let mapleader=" "
" }}}

" {{{ Unicode settings
" If we have a BOM, always honour that rather than trying to guess.
if &fileencodings !~? "ucs-bom"
  set fileencodings^=ucs-bom
endif

" Always check for UTF-8 when trying to determine encodings.
if &fileencodings !~? "utf-8"
  set fileencodings+=utf-8
endif

" Make sure we have a sane fallback for encoding detection
set fileencodings+=default
" }}}

" {{{ Syntax highlighting settings
" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif
if maparg('<C-L>', 'n') ==# ''
  nnoremap <silent> <C-L> :nohlsearch<C-R>=has('diff')?'<Bar>diffupdate':''<CR><CR><C-L>
endif
" }}}

" {{{ Terminal fixes
if &term ==? "xterm"
  set t_Sb=^[4%dm
  set t_Sf=^[3%dm
  set ttymouse=xterm2
endif

if has('nvim') && $TERM ==? "xterm-termite"
  let $NVIM_TUI_ENABLE_TRUE_COLOR=1
endif
" }}}


" {{{ Fix &shell, see bug #101665.
if "" == &shell
  if executable("/bin/zsh")
    set shell=/bin/zsh
  elseif executable("/bin/bash")
    set shell=/bin/bash
  elseif executable("/bin/sh")
    set shell=/bin/sh
  endif
endif
"}}}

" {{{ Our default /bin/sh is bash, not ksh, so syntax highlighting for .sh
" files should default to bash. See :help sh-syntax and bug #101819.
if has("eval")
  let is_bash=1
endif
" }}}

filetype plugin indent on

set modeline
set modelines=5

colorscheme Dark6
set number
set listchars=tab:»·,precedes:«,extends:»,eol:¬,nbsp:␣
augroup trailing
  au!
  au InsertEnter * :set listchars-=trail:␣
  au InsertLeave * :set listchars+=trail:␣
augroup END
set list
set showbreak=«···
set showcmd
set cursorline

set mouse=a

set wrap
set scrolloff=5
set sidescroll=1
set sidescrolloff=15
set splitright
set splitbelow
 " Better autocompletion
set wildmode=list:longest,full
set wildmenu

set completeopt=menuone,preview
"autocmd CursorMovedI * if pumvisible() == 0|pclose|endif 
autocmd InsertLeave * if pumvisible() == 0|pclose|endif

" Functions
"function! Mosh_Tab_Or_Complete()
"  if col('.')>1 && strpart( getline('.'), col('.')-2, 3 ) =~ '^\w'
"    return "\<C-N>"
"  else
"    return "\<Tab>"
"  endif
"endfunction

" Keymaps
nmap <F4> :noh<CR>
nmap <F3> @:
"inoremap <Tab> <C-R>=Mosh_Tab_Or_Complete()<CR>
inoremap <C-Space> <C-X><C-O>

" Format of text and source code
set smartindent
set smarttab
set shiftwidth=4
set expandtab
set tabstop=4
set softtabstop=4
au FileType make setlocal noexpandtab
au FileType python setlocal ts=4 sw=4
au FileType python,perl,bash setlocal cino=#1 commentstring=\ ##%s

set nrformats-=octal
set formatoptions+=j

augroup itsalltext
    autocmd!

    " Set textwidth=0 for text files edited with the itsalltext firefox-
    " plugin because automatik linebreaks tend to complicate editing
    " sometimes, for example wiki-entries
    autocmd BufNewFile,BufRead ~/.mozilla/firefox/*/itsalltext/*.txt set tw=0
augroup END

" Treat files in ~/.Xresources.d as xdefaults
autocmd BufRead,BufNewFile */.Xresources.d/* set filetype=xdefaults

if filereadable($HOME."/.vim/vimrc.local")
  source ~/.vim/vimrc.local
endif

if filereadable($HOME."/.vim/vim-plug.conf.vim")
  call plug#begin('~/.vim/plugged')
  source ~/.vim/vim-plug.conf.vim
  call plug#end()
endif

set background=dark
colorscheme gruvbox
